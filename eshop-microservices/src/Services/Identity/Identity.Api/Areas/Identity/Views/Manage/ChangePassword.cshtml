@model ChangePasswordViewModel
@inject AppbarService _appbarService;

<partial name="_AlertMessage" />

<div class="changePassword">
    <h4>
        Change Password
    </h4>
    <div class="changePassword-form">
        <form class="user" asp-action="ChangePassword"
              method="post" role="form">
            <div class="form-group mt-2">
                <input asp-for="OtpCode" type="text" name="OtpCode"
                       class="form-control form-control-user"
                       aria-describedby="emailHelp" placeholder="Otp Code..." />
                <span asp-validation-for="OtpCode" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                <input asp-for="CurrentPassword" type="password" name="CurrentPassword"
                       class="form-control form-control-user" id="exampleInputPassword"
                       placeholder="Current Password" />
                <span asp-validation-for="CurrentPassword" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                <input asp-for="NewPassword" type="password" name="NewPassword"
                       class="form-control form-control-user" id="exampleInputPassword"
                       placeholder="New Password" />
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>
            <div class="mt-4 form-btn">
                <button type="button"
                    id="resentOtp"
                    class="btn btn-outline-primary btn-user btn-block">
                    Sent OTP
                </button>
                <button type="submit"
                        class="btn btn-primary btn-user btn-block">
                    Change Password
                </button>
            </div>
        </form>
    </div>
</div>


@section Scripts{
    <script type="text/javascript">
        var elm = document.getElementById("resentOtp");

        function enableElementAfter30s() {
            var timeLeft = parseInt(localStorage.getItem('otpTimer')) || 30; // seconds

            // Disable the button and reset the text
            elm.disabled = true;
            elm.textContent = 'Resend OTP in ' + timeLeft + 's';

            // Update the button text every second
            var countdownInterval = setInterval(function () {
                if (timeLeft > 0) {
                    timeLeft--;
                    elm.textContent = 'Resend OTP in ' + timeLeft + 's';
                    localStorage.setItem('otpTimer', timeLeft);
                } else {
                    clearInterval(countdownInterval);
                    elm.textContent = 'Resend OTP';
                    elm.disabled = false;
                    localStorage.removeItem('otpTimer');
                }
            }, 1000); // 1000 milliseconds = 1 second
        }

        function resendOtp() {
            // Make an AJAX request to resend the OTP
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "@Url.Action("SentOtp", "Manage")", true); // Adjust the action and controller names as needed
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    // If the OTP was resent successfully, restart the countdown
                    localStorage.setItem('otpTimer', 30); // Reset timer in localStorage
                    enableElementAfter30s();
                } else if (xhr.readyState === 4) {
                    // Handle error (e.g., show a message to the user)
                    alert('Failed to resend OTP. Please try again.');
                }
            };

            xhr.send();
        }

        if (parseInt(localStorage.getItem('otpTimer'))) {
            enableElementAfter30s();
        }

        elm.addEventListener("click", resendOtp);
    </script>
}

@section Sidebar {
    @Html.Raw(_appbarService.RenderHtml())
}
@{
    _appbarService.SetActive("Manage", "ChangePassword", "Identity");
}